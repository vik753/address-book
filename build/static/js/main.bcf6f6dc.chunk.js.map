{"version":3,"sources":["stateContext/stateContext.js","pages/homePage/HomePage.js","pages/editPage/EditPage.js","components/header/Header.js","components/footer/Footer.js","dummy_data/dummy.data.js","App.js","index.js"],"names":["StateContext","React","createContext","HomePage","useContext","users","setUsers","contactList","map","user","phones","Object","values","firstPhone","description","number","otherPhones","filter","phone","firstLetters","first_name","toUpperCase","last_name","className","to","id","title","data-id","onClick","e","preventDefault","stopPropagation","window","confirm","removeId","target","dataset","newState","console","log","length","uuid_v4","EditPage","useParams","history","useHistory","userDataEl","useRef","removeIco","useState","currentUser","setCurrentUser","numPhones","isNamesValid","setIsNamesValid","isPhonesValid","setIsPhonesValid","isAllDataValid","setIsAllDataValid","useEffect","targetUser","startIsValidPhones","keys","key","phoneInputHandler","phoneKey","isDataValid","prevData","value","phoneSelectChangeHandler","nameChangeHandler","entries","validator","isMobilePhone","replaceAll","isPhValid","_","every","Boolean","isLength","min","max","isNamesVal","ref","newPhones","assign","prevState","disabled","htmlFor","type","placeholder","required","onChange","current","setAttribute","data-phoneid","name","push","find","localStorage","setItem","JSON","stringify","Header","Footer","dummyData","App","parse","getItem","Provider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcf6f6dc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const StateContext = React.createContext({});\r\n","import './homePage.scss';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { StateContext } from '../../stateContext/stateContext';\nimport { v4 as uuid_v4 } from 'uuid';\n\nexport const HomePage = () => {\n    const { users, setUsers } = useContext(StateContext);\n\n    const contactList = users.map((user) => {\n        const phones = Object.values(user.phones);\n        const firstPhone = `${phones[0].description}: ${phones[0].number}`;\n        const otherPhones = phones.filter(\n            (phone) => phone.number !== phones[0].number\n        );\n        const firstLetters = `${[...user.first_name][0].toUpperCase()}${[\n            ...user.last_name,\n        ][0].toUpperCase()}`;\n\n        const removeClickHandler = (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            const confirmation = window.confirm('Do you really want to delete this contact?');\n            if (!confirmation) return;\n            const removeId = e.target.dataset.id;\n            if (!removeId) return;\n            const newState = users.filter((user) => user.id !== removeId);\n            console.log(newState, user.id, removeId)\n            setUsers(newState);\n        };\n\n        return (\n            <Link\n                className=\"user-card\"\n                to={`/edit/${user.id}`}\n                key={user.id}\n                title=\"Click to edit\"\n            >\n                <div className=\"user-name_wrapper\">\n                    <div>\n                        <span className=\"user-logo\">{firstLetters}</span>\n                        <span className=\"user-name\">\n                            {user.first_name} {user.last_name}\n                        </span>\n                    </div>\n                    <div className=\"user-name_inner-wrapper\">\n                        <div className=\"user-first_phone\">{firstPhone}</div>\n                        <div\n                            className=\"remove-contact\"\n                            title=\"Remove contact\"\n                            data-id={user.id}\n                            onClick={removeClickHandler}\n                        />\n                    </div>\n                </div>\n                {phones.length > 1 && (\n                    <>\n                        <div className=\"more-phones\">more phones...</div>\n                        <div className=\"user-other_phones\">\n                            {otherPhones.length\n                                ? otherPhones.map((phone) => (\n                                      <span key={phone.number}>\n                                          {phone.description}: {phone.number}\n                                      </span>\n                                  ))\n                                : 'no more phones here...'}\n                        </div>\n                    </>\n                )}\n            </Link>\n        );\n    });\n\n    return (\n        <div className=\"home-wrapper\">\n            <h1>Phone Book</h1>\n            <div className=\"contacts-wrapper\">\n                <Link\n                  className=\"add-contact\"\n                  title=\"Add new\"\n                  to={`/edit/${uuid_v4()}`}\n                />\n                {contactList}\n            </div>\n        </div>\n    );\n};\n","import validator from 'validator';\nimport { useParams } from 'react-router-dom';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { StateContext } from '../../stateContext/stateContext';\nimport { useHistory } from 'react-router-dom';\nimport './editPage.scss';\nimport { v4 as uuid_v4 } from 'uuid';\nimport _ from 'lodash';\n\nexport const EditPage = () => {\n    const { id } = useParams();\n    let history = useHistory();\n    const userDataEl = useRef(null);\n    const removeIco = useRef(null);\n    const { users, setUsers } = useContext(StateContext);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [numPhones, setNumPhones] = useState(0);\n    const [isNamesValid, setIsNamesValid] = useState({\n        first_name: true,\n        last_name: true,\n    });\n    const [isPhonesValid, setIsPhonesValid] = useState({});\n    const [isAllDataValid, setIsAllDataValid] = useState(true);\n\n    useEffect(() => {\n        if (!id) return;\n\n        const targetUser = users.filter((user) => user.id === id);\n        if (targetUser.length) {\n            setCurrentUser(targetUser[0]);\n            const startIsValidPhones = {};\n            Object.keys(targetUser[0].phones).map((key) => {\n                startIsValidPhones[key] = true;\n            });\n            setIsPhonesValid(startIsValidPhones);\n        } else {\n            setCurrentUser({\n                id,\n                first_name: '',\n                last_name: '',\n                phones: {\n                    [uuid_v4()]: { number: '', description: 'mobile' },\n                },\n            });\n        }\n    }, []);\n\n    const addPhoneHandler = (e) => {\n        e.preventDefault();\n        const phoneKey = uuid_v4();\n        if (!phoneKey) return;\n        setCurrentUser((prevData) => ({\n            ...prevData,\n            phones: {\n                ...prevData.phones,\n                [phoneKey]: {\n                    description: 'mobile',\n                    number: '',\n                },\n            },\n        }));\n    };\n\n    const phoneInputHandler = (e) => {\n        e.preventDefault();\n        const phoneKey = e.target.id;\n        if (!phoneKey) return;\n        isDataValid();\n        setCurrentUser((prevData) => ({\n            ...prevData,\n            phones: {\n                ...prevData.phones,\n                [phoneKey]: {\n                    description: prevData.phones[phoneKey].description,\n                    number: e.target.value,\n                },\n            },\n        }));\n    };\n\n    const phoneSelectChangeHandler = (e) => {\n        e.preventDefault();\n        const phoneKey = e.target.dataset.id;\n        setCurrentUser((prevData) => ({\n            ...prevData,\n            phones: {\n                ...prevData.phones,\n                [phoneKey]: {\n                    description: e.target.value,\n                    number: prevData.phones[phoneKey].number,\n                },\n            },\n        }));\n    };\n\n    const nameChangeHandler = (e) => {\n        e.preventDefault();\n        const id = e.target.dataset.id;\n        if (!id) return;\n        isDataValid();\n        setCurrentUser((prevData) => ({\n            ...prevData,\n            [e.target.id]: e.target.value,\n        }));\n    };\n\n    const removePhoneHandler = (e) => {\n        e.preventDefault();\n        const phoneKey = e.target.dataset.id;\n        const newPhones = Object.assign({}, currentUser.phones);\n        delete newPhones[phoneKey];\n        setCurrentUser((prevState) => ({\n            ...prevState,\n            phones: newPhones,\n        }));\n    };\n\n    const cancelBtnHandler = (e) => {\n        e.preventDefault();\n        history.push('/');\n    };\n\n    const isDataValid = () => {\n        const { first_name, last_name, phones } = currentUser;\n        const isPhonesValid = {};\n        Object.entries(phones).map(([key, value]) => {\n            isPhonesValid[key] = validator.isMobilePhone(value.number.replaceAll('-', ''));\n        });\n        setIsPhonesValid(isPhonesValid);\n        const isPhValid = _.every(isPhonesValid, Boolean);\n\n        const isNamesValid = {\n            first_name: validator.isLength(first_name, { min: 2, max: 24 }),\n            last_name: validator.isLength(last_name, { min: 2, max: 24 }),\n        };\n        setIsNamesValid(isNamesValid);\n        const isNamesVal = _.every(isNamesValid, Boolean);\n        setIsAllDataValid(isPhValid && isNamesVal);\n        return isPhValid && isNamesVal;\n    };\n\n    const saveBtnHandler = (e) => {\n        e.preventDefault();\n\n        const isValid = isDataValid();\n        if (!isValid) {\n            return;\n        }\n\n        if (users.find((user) => user.id === currentUser.id)) {\n            setUsers((prevState) => {\n                const newState = prevState.map((user) => {\n                    if (user.id === currentUser.id) {\n                        return currentUser;\n                    }\n                    return user;\n                });\n                window.localStorage.setItem('address_contacts', JSON.stringify(newState));\n                return newState;\n            });\n        } else {\n            setUsers((prevState) => [...prevState, currentUser]);\n        }\n\n        history.push('/');\n    };\n\n    const getPhoneRow = (phoneKey) => {\n        if (removeIco.current) {\n            removeIco.current.setAttribute('data-id', phoneKey);\n        }\n        return (\n            <div\n                key={phoneKey}\n                className={`user-data_row phone-row phone-row_${phoneKey}`}\n                data-phoneid={phoneKey}\n            >\n                <label htmlFor={phoneKey}>Phone:*</label>\n                <div>\n                    <select\n                        name=\"phone-type\"\n                        className=\"phone-type\"\n                        data-id={phoneKey}\n                        value={currentUser.phones[phoneKey].description}\n                        onChange={phoneSelectChangeHandler}\n                    >\n                        <option value=\"mobile\">Mobile</option>\n                        <option value=\"work\">Work</option>\n                        <option value=\"home\">Home</option>\n                        <option value=\"car\">Car</option>\n                    </select>\n                    <input\n                        id={phoneKey}\n                        type=\"text\"\n                        placeholder=\"Phone\"\n                        value={currentUser.phones[phoneKey].number}\n                        onChange={phoneInputHandler}\n                        required={true}\n                        className={isPhonesValid[phoneKey] ? '' : 'errorInput'}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"edit-wrapper\">\n            <h1>Edit Contact</h1>\n            <div className=\"user-data\" ref={userDataEl}>\n                <div className=\"add-phone\" title=\"Add new phone\" onClick={addPhoneHandler} />\n                <div\n                    className=\"remove-phone\"\n                    title=\"Remove phone\"\n                    onClick={removePhoneHandler}\n                    disabled={numPhones === 1}\n                    ref={removeIco}\n                />\n                <div className=\"user-data_row\">\n                    <label htmlFor=\"first_name\">First Name:*</label>\n                    <input\n                        id=\"first_name\"\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        required={true}\n                        value={currentUser ? currentUser.first_name : ''}\n                        data-id={currentUser ? currentUser.id : null}\n                        onChange={nameChangeHandler}\n                        className={isNamesValid.first_name ? '' : 'errorInput'}\n                    />\n                </div>\n                <div className=\"user-data_row\">\n                    <label htmlFor=\"last_name\">Last Name:*</label>\n                    <input\n                        id=\"last_name\"\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        required={true}\n                        value={currentUser ? currentUser.last_name : ''}\n                        data-id={currentUser ? currentUser.id : null}\n                        onChange={nameChangeHandler}\n                        className={isNamesValid.last_name ? '' : 'errorInput'}\n                    />\n                </div>\n                <>\n                    {currentUser &&\n                        Object.values(currentUser.phones).length &&\n                        Object.keys(currentUser.phones).map((key) => getPhoneRow(key))}\n                </>\n            </div>\n            {!isAllDataValid && (\n                <p className=\"all-required\">\n                    *All fields are required! Phones must be in correct format.\n                </p>\n            )}\n            <div className=\"buttons-wrapper\">\n                <input\n                    type=\"button\"\n                    value=\"Cancel\"\n                    className=\"cancelBtn\"\n                    onClick={cancelBtnHandler}\n                />\n                <input type=\"button\" value=\"Save\" className=\"saveBtn\" onClick={saveBtnHandler} />\n            </div>\n        </div>\n    );\n};\n","import './header.scss';\nimport { Link } from 'react-router-dom';\nexport const Header = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"header-wrapper\">\n                <h2 className=\"logo\">Logo</h2>\n                <div className=\"links\">\n                    <Link to={'/'} className=\"link\">\n                        Home\n                    </Link>\n                    <Link to={'/'} className=\"link\">About</Link>\n                    <Link to={'/'}  className=\"link\">Contacts</Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import './footer.scss';\n\nexport const Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer_links\">\n                <span>Twitter</span>\n                <span>Facebook</span>\n                <span>Instagram</span>\n                <span>Telegram</span>\n            </div>\n        </div>\n    );\n};\n","export const dummyData = [\n    {\n        id: \"0dadsf-asdf\",\n        first_name: 'John',\n        last_name: 'Dow',\n        phones: {\n            'aaa-001': { number: '+380503332233', description: 'mobile' },\n            'aaa-002': { number: '+380503176534', description: 'work' },\n        },\n    },\n    {\n        id: \"1asdfa-asdfads\",\n        first_name: 'Dan',\n        last_name: 'Brown',\n        phones: {\n            'aaa-003': { number: '+380675233322', description: 'mobile' },\n        },\n    },\n    {\n        id: \"2asdf-asdf\",\n        first_name: 'Milla',\n        last_name: 'Jovovich',\n        phones: {\n            'aaa-004': { number: '+380663515151', description: 'home' },\n        },\n    },\n    {\n        id: \"3asdfas-asdf\",\n        first_name: 'Bruce',\n        last_name: 'Willis',\n        phones: {\n            'aaa-005': { number: '+380995890509', description: 'mobile' },\n            'aaa-006': { number: '+380995890508', description: 'home' },\n            'aaa-007': { number: '+380995890507', description: 'work' },\n            'aaa-008': { number: '+380995890506', description: 'car' },\n        },\n    },\n];\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport { HomePage } from './pages/homePage/HomePage';\nimport { EditPage } from './pages/editPage/EditPage';\nimport { Header } from './components/header/Header';\nimport { Footer } from './components/footer/Footer';\nimport { dummyData } from './dummy_data/dummy.data';\nimport {StateContext} from \"./stateContext/stateContext\";\n\n\n\nconst App = () => {\n    const [users, setUsers] = useState(JSON.parse(window.localStorage.getItem('address_contacts')) || dummyData);\n\n    return (\n        <StateContext.Provider value={{ users, setUsers }}>\n            <Router>\n                <div className=\"root-wrapper\">\n                    <Header />\n                    <div className=\"main-wrapper\">\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <HomePage />\n                            </Route>\n                            <Route path=\"/edit/:id\">\n                                <EditPage />\n                            </Route>\n                        </Switch>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </StateContext.Provider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}